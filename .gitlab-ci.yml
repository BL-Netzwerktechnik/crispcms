# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

variables:
  POSTGRES_USER: postgres
  POSTGRES_DB: crisp_dev
  POSTGRES_HOST_AUTH_METHOD: trust
  LICENSE_FINDER_CLI_OPTS: '--recursive'
  FF_NETWORK_PER_BUILD: "true"
  CS_IMAGE: $CI_REGISTRY_IMAGE:latest

stages:
- compliance
- test
- publish
- pages
- release

sast:
  stage: compliance
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/BAS.latest.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/SAST-IaC.gitlab-ci.yml


nightly:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint:
    - ''
  script:
  - export GENERATED_TAG=`cat GIT_TAG`
  - echo Building Image for Tag $GENERATED_TAG
  - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
    --destination "${CI_REGISTRY_IMAGE}:nightly" 
    --destination "${CI_REGISTRY_IMAGE}:latest"
    --build-arg GIT_COMMIT=${CI_COMMIT_SHORT_SHA} 
    --build-arg CI_BUILD=${CI_JOB_ID}
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG

stable:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint:
    - ''
  script:
  - export TAG_MAJOR=$(echo $CI_COMMIT_TAG | cut -d. -f1)
  - export TAG_MINOR=$(echo $CI_COMMIT_TAG | cut -d. -f2)
  - export TAG_PATCH=$(echo $CI_COMMIT_TAG | cut -d. -f3)
  - export GENERATED_TAG=`cat GIT_TAG`
  - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
    --destination "${CI_REGISTRY_IMAGE}:${TAG_MAJOR}"
    --destination "${CI_REGISTRY_IMAGE}:${TAG_MAJOR}.${TAG_MINOR}"
    --destination "${CI_REGISTRY_IMAGE}:${TAG_MAJOR}.${TAG_MINOR}.${TAG_PATCH}"
    --build-arg GIT_COMMIT=${CI_COMMIT_SHORT_SHA}
    --build-arg GIT_TAG=${GENERATED_TAG}
    --build-arg CI_BUILD=${CI_JOB_ID}
    --cleanup
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'

release-candidate:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint:
    - ''
  script:
  - export GENERATED_TAG=`cat GIT_TAG`
  - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
    --destination "${CI_REGISTRY_IMAGE}:${GENERATED_TAG}"
    --build-arg GIT_COMMIT=${CI_COMMIT_SHORT_SHA}
    --build-arg GIT_TAG=${GENERATED_TAG}
    --build-arg CI_BUILD=${CI_JOB_ID}
    --cleanup
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+\.rc\.\d+$/'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    #- migrate-and-test
    - stable
  script:
    - 'echo "Releasing version ${CI_COMMIT_TAG}"'
  release:
    name: '${CI_PROJECT_TITLE} ${CI_COMMIT_TAG}'
    description: '${CI_PROJECT_DESCRIPTION}'
    tag_name: '${CI_COMMIT_TAG}'
    ref: '${CI_COMMIT_SHA}'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'