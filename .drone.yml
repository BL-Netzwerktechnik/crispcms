kind: pipeline
type: docker
name: Test

steps:

  - name: create_postgres_db
    image: postgres:9-alpine
    commands:
      - sleep 30
      - psql -h postgres -U postgres -c "CREATE DATABASE crisp_dev;"

  - name: Migrate and Test Crisp
    image: php:8.1-buster
    environment:
      COMPOSER_ALLOW_SUPERUSER: 1
      ENVIRONMENT: development
      GIT_COMMIT: ${DRONE_COMMIT_SHA:0:8}
      SENTRY_URL: https://sentry.internal.jrbit.de
      SENTRY_AUTH_TOKEN:
        from_secret: sentry_token
      SENTRY_ORG: jrbit

      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/crisp_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_INDEX: 2
      DEFAULT_LOCALE: en
      CRISP_FLAGSMITH_APP_URL: https://flagsmith.internal.jrbit.de/api/v1/
      CRISP_FLAGSMITH_API_KEY: mwp6tU4GGESSbTyP5qrKki
      CRISP_THEME: crisptheme
      LANG: en_US.utf8
      VERBOSITY: 3
      HOST: ci
      PROTO: http
      TZ: UTC

    commands:
      - cd cms
      - echo "# We dont need me!" > .env
      - mkdir /tmp/ci
      - cd /tmp/ci
      - apt-get update && apt-get install -y libpq-dev autoconf gcc libc6-dev make libicu-dev wget git-core zip zlib1g-dev libpng-dev doxygen
      - pecl install redis
      - docker-php-ext-install pgsql pdo_pgsql pdo_mysql intl gd gettext
      - docker-php-ext-enable pdo_pgsql pdo_mysql redis intl gd gettext
      - wget https://getcomposer.org/composer-stable.phar -O /tmp/ci/composer
      - cd /drone/src/cms
      - php /tmp/ci/composer install
      - php bin/cli.php migrate
      - php bin/cli.php theme install basic
      - rm /tmp/ci/composer
      - ./vendor/bin/phpunit --bootstrap vendor/autoload.php tests
      #- curl -sL https://sentry.io/get-cli/ | bash
      #- export VERSION=$(php bin/cli.php release)
      #- sentry-cli releases new --finalize -p crisp-core $VERSION
      #- sentry-cli releases set-commits --auto $VERSION


services:
  - name: redis
    image: redis
  - name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust

---
kind: pipeline
type: docker
name: Build Docker Images

steps:

  - name: en_US
    image: plugins/docker
    settings:
      username:
        from_secret: docker_user
      auto_tag: true
      password:
        from_secret: docker_secret
      repo: registry.jrbit.de/crispcms/core/en_us
      registry: registry.jrbit.de
      squash: true
      build_args:
        - GIT_COMMIT=${DRONE_COMMIT_SHA:0:8}
        - LANG=en_US.UTF-8
        - DEFAULT_LOCALE=en
        - GIT_TAG=${DRONE_TAG}
        - CI_BUILD=${DRONE_BUILD_NUMBER}
    when:
      ref:
        - refs/heads/master
        - refs/tags/*
      event:
        include:
          - tag
          - push
    depends_on: [ clone ]


  - name: de_DE
    image: plugins/docker
    settings:
      username:
        from_secret: docker_user
      auto_tag: true
      password:
        from_secret: docker_secret
      repo: registry.jrbit.de/crispcms/core/de_de
      registry: registry.jrbit.de
      squash: true
      build_args:
        - GIT_COMMIT=${DRONE_COMMIT_SHA:0:8}
        - LANG=de_DE.UTF-8
        - DEFAULT_LOCALE=de
        - GIT_TAG=${DRONE_TAG}
        - CI_BUILD=${DRONE_BUILD_NUMBER}
    when:
      ref:
        - refs/heads/master
        - refs/tags/*
      event:
        include:
          - tag
          - push
    depends_on: [ clone ]

depends_on:
  - Test
